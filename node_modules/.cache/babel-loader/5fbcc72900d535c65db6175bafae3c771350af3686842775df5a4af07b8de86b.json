{"ast":null,"code":"document.addEventListener(\"DOMContentLoaded\", function () {\n  const uploadForm = document.getElementById(\"uploadForm\");\n  const videoInput = document.getElementById(\"videoInput\");\n  const isLabeledCheckbox = document.getElementById(\"isLabeled\");\n  const gameNameInput = document.getElementById(\"gameName\");\n  const progressBar = document.getElementById(\"progressBar\");\n  const progressText = document.getElementById(\"progressText\");\n  const resultContainer = document.getElementById(\"resultContainer\");\n  const statsContainer = document.getElementById(\"statsContainer\");\n\n  // Function to fetch statistics\n  async function fetchStats() {\n    const response = await fetch(\"http://127.0.0.1:8000/stats\");\n    const stats = await response.json();\n    let statsHtml = \"<h3>Cluster Statistics</h3><ul>\";\n    for (const [game, count] of Object.entries(stats)) {\n      statsHtml += `<li><strong>${game}</strong>: ${count} frames</li>`;\n    }\n    statsHtml += \"</ul>\";\n    statsContainer.innerHTML = statsHtml;\n  }\n\n  // Upload video function\n  uploadForm.addEventListener(\"submit\", async function (event) {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"video\", videoInput.files[0]);\n    formData.append(\"is_labeled\", isLabeledCheckbox.checked);\n    formData.append(\"game_name\", gameNameInput.value);\n    progressBar.style.width = \"0%\";\n    progressText.textContent = \"Uploading...\";\n    const response = await fetch(\"http://127.0.0.1:8000/upload/\", {\n      method: \"POST\",\n      body: formData\n    });\n    const result = await response.json();\n\n    // Update progress bar to 100%\n    progressBar.style.width = \"100%\";\n    progressText.textContent = \"Processing Completed!\";\n    if (result.game) {\n      resultContainer.innerHTML = `<h3>Predicted Game:</h3><p>${result.game}</p>`;\n    } else {\n      resultContainer.innerHTML = `<p>${result.message}</p>`;\n    }\n    fetchStats(); // Refresh stats\n  });\n  fetchStats(); // Load stats on page load\n});","map":{"version":3,"names":["document","addEventListener","uploadForm","getElementById","videoInput","isLabeledCheckbox","gameNameInput","progressBar","progressText","resultContainer","statsContainer","fetchStats","response","fetch","stats","json","statsHtml","game","count","Object","entries","innerHTML","event","preventDefault","formData","FormData","append","files","checked","value","style","width","textContent","method","body","result","message"],"sources":["/Users/raghavsomasundaram/gameplay-clustering/gameplay-clustering/src/GameplayClusteringUi.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\n  const uploadForm = document.getElementById(\"uploadForm\");\n  const videoInput = document.getElementById(\"videoInput\");\n  const isLabeledCheckbox = document.getElementById(\"isLabeled\");\n  const gameNameInput = document.getElementById(\"gameName\");\n  const progressBar = document.getElementById(\"progressBar\");\n  const progressText = document.getElementById(\"progressText\");\n  const resultContainer = document.getElementById(\"resultContainer\");\n  const statsContainer = document.getElementById(\"statsContainer\");\n\n  // Function to fetch statistics\n  async function fetchStats() {\n      const response = await fetch(\"http://127.0.0.1:8000/stats\");\n      const stats = await response.json();\n      let statsHtml = \"<h3>Cluster Statistics</h3><ul>\";\n\n      for (const [game, count] of Object.entries(stats)) {\n          statsHtml += `<li><strong>${game}</strong>: ${count} frames</li>`;\n      }\n\n      statsHtml += \"</ul>\";\n      statsContainer.innerHTML = statsHtml;\n  }\n\n  // Upload video function\n  uploadForm.addEventListener(\"submit\", async function (event) {\n      event.preventDefault();\n\n      const formData = new FormData();\n      formData.append(\"video\", videoInput.files[0]);\n      formData.append(\"is_labeled\", isLabeledCheckbox.checked);\n      formData.append(\"game_name\", gameNameInput.value);\n\n      progressBar.style.width = \"0%\";\n      progressText.textContent = \"Uploading...\";\n\n      const response = await fetch(\"http://127.0.0.1:8000/upload/\", {\n          method: \"POST\",\n          body: formData,\n      });\n\n      const result = await response.json();\n\n      // Update progress bar to 100%\n      progressBar.style.width = \"100%\";\n      progressText.textContent = \"Processing Completed!\";\n\n      if (result.game) {\n          resultContainer.innerHTML = `<h3>Predicted Game:</h3><p>${result.game}</p>`;\n      } else {\n          resultContainer.innerHTML = `<p>${result.message}</p>`;\n      }\n      \n\n      fetchStats(); // Refresh stats\n  });\n\n  fetchStats(); // Load stats on page load\n});\n"],"mappings":"AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACxD,MAAMC,UAAU,GAAGF,QAAQ,CAACG,cAAc,CAAC,YAAY,CAAC;EACxD,MAAMC,UAAU,GAAGJ,QAAQ,CAACG,cAAc,CAAC,YAAY,CAAC;EACxD,MAAME,iBAAiB,GAAGL,QAAQ,CAACG,cAAc,CAAC,WAAW,CAAC;EAC9D,MAAMG,aAAa,GAAGN,QAAQ,CAACG,cAAc,CAAC,UAAU,CAAC;EACzD,MAAMI,WAAW,GAAGP,QAAQ,CAACG,cAAc,CAAC,aAAa,CAAC;EAC1D,MAAMK,YAAY,GAAGR,QAAQ,CAACG,cAAc,CAAC,cAAc,CAAC;EAC5D,MAAMM,eAAe,GAAGT,QAAQ,CAACG,cAAc,CAAC,iBAAiB,CAAC;EAClE,MAAMO,cAAc,GAAGV,QAAQ,CAACG,cAAc,CAAC,gBAAgB,CAAC;;EAEhE;EACA,eAAeQ,UAAUA,CAAA,EAAG;IACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;IAC3D,MAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACnC,IAAIC,SAAS,GAAG,iCAAiC;IAEjD,KAAK,MAAM,CAACC,IAAI,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACN,KAAK,CAAC,EAAE;MAC/CE,SAAS,IAAI,eAAeC,IAAI,cAAcC,KAAK,cAAc;IACrE;IAEAF,SAAS,IAAI,OAAO;IACpBN,cAAc,CAACW,SAAS,GAAGL,SAAS;EACxC;;EAEA;EACAd,UAAU,CAACD,gBAAgB,CAAC,QAAQ,EAAE,gBAAgBqB,KAAK,EAAE;IACzDA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEtB,UAAU,CAACuB,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7CH,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAErB,iBAAiB,CAACuB,OAAO,CAAC;IACxDJ,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEpB,aAAa,CAACuB,KAAK,CAAC;IAEjDtB,WAAW,CAACuB,KAAK,CAACC,KAAK,GAAG,IAAI;IAC9BvB,YAAY,CAACwB,WAAW,GAAG,cAAc;IAEzC,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;MAC1DoB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEV;IACV,CAAC,CAAC;IAEF,MAAMW,MAAM,GAAG,MAAMvB,QAAQ,CAACG,IAAI,CAAC,CAAC;;IAEpC;IACAR,WAAW,CAACuB,KAAK,CAACC,KAAK,GAAG,MAAM;IAChCvB,YAAY,CAACwB,WAAW,GAAG,uBAAuB;IAElD,IAAIG,MAAM,CAAClB,IAAI,EAAE;MACbR,eAAe,CAACY,SAAS,GAAG,8BAA8Bc,MAAM,CAAClB,IAAI,MAAM;IAC/E,CAAC,MAAM;MACHR,eAAe,CAACY,SAAS,GAAG,MAAMc,MAAM,CAACC,OAAO,MAAM;IAC1D;IAGAzB,UAAU,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC;EAEFA,UAAU,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}